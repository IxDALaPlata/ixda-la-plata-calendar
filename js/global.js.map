{"version":3,"names":[],"mappings":"","sources":["global.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * Loads images, scripts, styles, iframes, videos and audios asynchronously.\n * @param {NodeList} [nodes] - A NodeList of elements. By default, it is the result of `querySelectorAll('[data-aload]')`.\n * @returns {NodeList}\n */\nmodule.exports = function aload(nodes) {\n  'use strict';\n\n  var attribute = 'data-aload';\n\n  nodes = nodes || window.document.querySelectorAll('[' + attribute + ']');\n\n  if (nodes.length === undefined) {\n    nodes = [nodes];\n  }\n\n  [].forEach.call(nodes, function (node) {\n    node[ node.tagName !== 'LINK' ? 'src' : 'href' ] = node.getAttribute(attribute);\n    node.removeAttribute(attribute);\n  });\n\n  return nodes;\n}\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar toast = require('./toast.js');\n\nfunction updateConnectionStatus() {\n    var text = navigator.onLine ? 'Estás conectado' : 'Estás desconectado';\n    var theme = navigator.onLine ? 'success' : 'info';\n\n    toast(text, theme);\n}\n\nmodule.exports = function offline() {\n    window.addEventListener('offline', updateConnectionStatus);\n    window.addEventListener('online', updateConnectionStatus);\n};\n\n},{\"./toast.js\":5}],3:[function(require,module,exports){\n'use strict';\n\nmodule.exports = function safariLinks() {\n    // Mobile Safari in standalone mode\n    if ('standalone' in window.navigator && window.navigator.standalone) {\n        // If you want to prevent remote links in standalone web apps opening Mobile Safari, change 'remotes' to true\n        var noddy,\n            remotes = false;\n\n        document.addEventListener('click', function (event) {\n            noddy = event.target;\n\n            // Bubble up until we hit link or top HTML element. Warning: BODY element is not compulsory so better to stop on HTML\n            while (noddy.nodeName !== 'A' && noddy.nodeName !== 'HTML') {\n                noddy = noddy.parentNode;\n            }\n\n            if ('href' in noddy && noddy.href.indexOf('http') !== -1 && (noddy.href.indexOf(document.location.host) !== -1 || remotes)) {\n                event.preventDefault();\n                document.location.href = noddy.href;\n            }\n        }, false);\n    }\n};\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar toast = require('./toast.js');\n\nmodule.exports = function serviceWorker() {\n    if (!navigator.serviceWorker) return;\n\n    navigator.serviceWorker.register('/sw.js', { scope: '/' }).then(function (reg) {\n        reg.onupdatefound = function () {\n            var installingWorker = reg.installing;\n\n            installingWorker.onstatechange = function () {\n                if (installingWorker.state === 'installed') {\n                    var text = navigator.serviceWorker.controller ? 'Nueva versión disponible' : 'El contenido está disponible sin conexión';\n                    var theme = navigator.serviceWorker.controller ? 'info' : 'success';\n\n                    toast(text, theme);\n                }\n            };\n        };\n    });\n};\n\n},{\"./toast.js\":5}],5:[function(require,module,exports){\n'use strict';\n\nvar toastContainer = void 0;\n\nfunction init() {\n    toastContainer = document.querySelector('#js-toast');\n}\n\nfunction tapHandler() {\n    window.location.reload();\n}\n\nmodule.exports = function toast(message) {\n    var theme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'info';\n\n    init();\n\n    var toastMsgEl = document.createElement('div');\n    toastMsgEl.className = 'toast__msg toast__msg--' + theme;\n    toastMsgEl.textContent = message;\n    toastMsgEl.onclick = tapHandler;\n\n    toastContainer.appendChild(toastMsgEl);\n\n    toastMsgEl.addEventListener('transitionend', function (event) {\n        event.target.parentNode.removeChild(event.target);\n    });\n\n    setTimeout(function () {\n        toastMsgEl.classList.add('toast__msg--hide');\n    }, 5000);\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nvar aload = require('aload');\nvar offline = require('./common/offline');\nvar safariLinks = require('./common/safari-links');\nvar serviceWorker = require('./common/service-worker');\n\nwindow.addEventListener('load', function () {\n    aload();\n    offline();\n    safariLinks();\n    serviceWorker();\n});\n\n},{\"./common/offline\":2,\"./common/safari-links\":3,\"./common/service-worker\":4,\"aload\":1}]},{},[6]);\n"],"file":"global.js"}